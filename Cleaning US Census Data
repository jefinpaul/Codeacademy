import pandas as pd
import numpy as np
import matplotlib.pyplot as pyplot
import codecademylib3_seaborn
import glob

us_census = glob.glob("states*.csv")

df_list = []
for filename in us_census:
  data = pd.read_csv(filename)
  df_list.append(data)

us_census = pd.concat(df_list)
print(us_census.columns)
print(us_census.dtypes)
print(us_census.head())


us_census['Income'] = us_census['Income'].replace('[\$,]','', regex = True)
us_census['Income'] = pd.to_numeric(us_census['Income'])

####Look at the GenderPop column. We are going to want to separate this into two columns, the Men column, and the Women column.Split the column into those two new columns using str.split and separating out those results.###
gender_split= us_census.GenderPop.str.split('_')
us_census['Men'] = gender_split.str.get(0)
us_census['Women'] = gender_split.str.get(1)

####Convert both of the columns into numerical datatypes.There is still an M or an F character in each entry! We should remove those before we convert.####

us_census['Men']= us_census.Men.str[:-1]
us_census['Women'] = us_census.Women.str[:-1]

us_census['Men'] = pd.to_numeric(us_census.Men)
us_census['Women'] = pd.to_numeric(us_census.Women)

####files probably have nan values in them! Print out your column with the number of women per state to see.####

us_census = us_census.fillna(value={
  'Women': us_census.TotalPop - us_census.Men
})

#Use .duplicated() on your census DataFrame to see if we have duplicate rows in there.#

print(us_census.duplicated())
us_census = us_census.drop_duplicates()

pyplot.scatter(us_census['Women'], us_census['Income'])

pyplot.xlabel('Women')
pyplot.ylabel('Income')
pyplot.show()

''' Look at the .columns again to see what the race categories are.
Make a histogram for each one!
You will have to get the columns into numerical format, and those percentage signs will have to go.
fill the nan values with something that makes sense! You probably dropped the duplicate rows when making your last graph, but it couldnâ€™t hurt to check for duplicates again.'''

us_census.Hispanic = us_census.Hispanic.replace('[%,]','',regex=True)
us_census.Hispanic = pd.to_numeric(us_census.Hispanic)

us_census.White = us_census.White.replace('[%,]','',regex=True)
us_census.White = pd.to_numeric(us_census.White)

us_census.Black = us_census.Black.replace('[%,]','',regex=True)
us_census.Black = pd.to_numeric(us_census.Black)

us_census.Native = us_census.Native.replace('[%,]','',regex=True)
us_census.Native = pd.to_numeric(us_census.Native)

us_census.Asian = us_census.Asian.replace('[%,]','',regex=True)
us_census.Asian = pd.to_numeric(us_census.Asian)

us_census.Pacific = us_census.Pacific.replace('[%,]','',regex=True)
us_census.Pacific = pd.to_numeric(us_census.Pacific)
print(us_census.dtypes)

print(us_census.Hispanic.isna().value_counts())
print(us_census.White.isna().value_counts())
print(us_census.Black.isna().value_counts())
print(us_census.Native.isna().value_counts())
print(us_census.Asian.isna().value_counts())
print(us_census.Pacific.isna().value_counts())

us_census['Pacific'] = us_census['Pacific'].fillna(100 - (us_census['Hispanic'] +us_census['Black']+us_census['White']+us_census['Native']+us_census['Asian']  ))

print(us_census.Pacific.isna().value_counts())

us_census = us_census.drop_duplicates()
pyplot.hist(us_census.Hispanic, bins=15, label= "hispanic")
pyplot.hist(us_census.Black, bins=15,label= "black")
pyplot.hist(us_census.White, bins=15,label= "white")
pyplot.hist(us_census.Native, bins=15,label= "native")
pyplot.hist(us_census.Asian, bins=15,label= "asian")
pyplot.hist(us_census.Pacific, bins=15, label= "pacific")
pyplot.legend()
pyplot.show()
